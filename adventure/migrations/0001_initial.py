# Generated by Django 4.0 on 2022-06-06 12:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ability', '0002_auto_20200901_1442'),
        ('chara', '0039_charahome'),
        ('battle', '0017_alter_battleeffect_value'),
        ('asset', '0002_scene'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('cost', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdventureBattle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('monsters', models.ManyToManyField(to='battle.Monster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdventureEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdventureStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('step', models.IntegerField()),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('battle', 'battle'), ('event', 'event'), ('scene', 'scene')], max_length=10)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='adventure.adventure')),
                ('battle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='adventure.adventurebattle')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='adventure.adventureevent')),
                ('scene', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='asset.scene')),
            ],
            options={
                'unique_together': {('adventure', 'step')},
            },
        ),
        migrations.CreateModel(
            name='AdventureRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('active', 'active'), ('ended', 'ended')], default='inactive', max_length=10)),
                ('current_step', models.PositiveIntegerField(default=0)),
                ('difficulty', models.FloatField(default=1)),
                ('abilities', models.ManyToManyField(to='ability.Ability')),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adventure.adventure')),
                ('chara', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chara.chara')),
            ],
            options={
                'unique_together': {('chara', 'adventure')},
            },
        ),
    ]
